#!/usr/bin/env bash

function usage {
    cat <<EOF

ffuz -  file to fuzzy search
    
    Accepts a file as argument. Meant to be used with plain text files. Starts fzf to fuzzy match what you write with a line of the file. Prints the selected line to stdout.

    If the file does not exist, returns an error message. Uses only the first file passed as an argument, ignores all other arguments.
       
Usage 
    ffuz [-h | --help] FILE

Dependencies
    fzf

EOF
}

function msg_no_cmd_found {
cat <<EOF

Error: ${cmd} not found. Please install it and try again.

EOF

}

function check_dependencies {
    commands=(fzf)

    for cmd in "${commands[@]}"; do
        if ! command -v "${cmd}" &>/dev/null; then
            msg_no_cmd_found "${cmd}"
            exit 1
        fi
    done

}

function assert_file_exists {
    if [[ ! -f "${1}" ]]; then
        return 1
    else
        return 0
    fi
}

function ffuz {
    if assert_file_exists "${1}"; then
        cat "${1}" | fzf --tac
    else
        echo "Error: file \"${1}\" does not exist." >&2
        exit 1
    fi
}

function main {

    check_dependencies

    case "$1" in

    "-h" | "--help" | "")
        usage
        exit 0
        ;;
    *)
        ffuz "$1"
        ;;
    esac
}


# If the script is not being sourced, run main
# this is done so that the script can be tested
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    # Ignores all arguments but the first one
    main "$1"
fi

